/* 
 * Gaia-Lite for Cosmos
 *
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * OpenAPI spec version: 3.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct StdTxFee {
  #[serde(rename = "gas")]
  gas: Option<String>,
  #[serde(rename = "amount")]
  amount: Option<Vec<::models::Coin>>
}

impl StdTxFee {
  pub fn new() -> StdTxFee {
    StdTxFee {
      gas: None,
      amount: None
    }
  }

  pub fn set_gas(&mut self, gas: String) {
    self.gas = Some(gas);
  }

  pub fn with_gas(mut self, gas: String) -> StdTxFee {
    self.gas = Some(gas);
    self
  }

  pub fn gas(&self) -> Option<&String> {
    self.gas.as_ref()
  }

  pub fn reset_gas(&mut self) {
    self.gas = None;
  }

  pub fn set_amount(&mut self, amount: Vec<::models::Coin>) {
    self.amount = Some(amount);
  }

  pub fn with_amount(mut self, amount: Vec<::models::Coin>) -> StdTxFee {
    self.amount = Some(amount);
    self
  }

  pub fn amount(&self) -> Option<&Vec<::models::Coin>> {
    self.amount.as_ref()
  }

  pub fn reset_amount(&mut self) {
    self.amount = None;
  }

}



