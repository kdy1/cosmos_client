/* 
 * Gaia-Lite for Cosmos
 *
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * OpenAPI spec version: 3.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct InlineResponse2001 {
  #[serde(rename = "block_height")]
  block_height: Option<f32>,
  #[serde(rename = "validators")]
  validators: Option<Vec<::models::TendermintValidator>>
}

impl InlineResponse2001 {
  pub fn new() -> InlineResponse2001 {
    InlineResponse2001 {
      block_height: None,
      validators: None
    }
  }

  pub fn set_block_height(&mut self, block_height: f32) {
    self.block_height = Some(block_height);
  }

  pub fn with_block_height(mut self, block_height: f32) -> InlineResponse2001 {
    self.block_height = Some(block_height);
    self
  }

  pub fn block_height(&self) -> Option<&f32> {
    self.block_height.as_ref()
  }

  pub fn reset_block_height(&mut self) {
    self.block_height = None;
  }

  pub fn set_validators(&mut self, validators: Vec<::models::TendermintValidator>) {
    self.validators = Some(validators);
  }

  pub fn with_validators(mut self, validators: Vec<::models::TendermintValidator>) -> InlineResponse2001 {
    self.validators = Some(validators);
    self
  }

  pub fn validators(&self) -> Option<&Vec<::models::TendermintValidator>> {
    self.validators.as_ref()
  }

  pub fn reset_validators(&mut self) {
    self.validators = None;
  }

}



