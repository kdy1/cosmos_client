/* 
 * Gaia-Lite for Cosmos
 *
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * OpenAPI spec version: 3.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// InlineResponse200Other : more information on versions

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct InlineResponse200Other {
  #[serde(rename = "tx_index")]
  tx_index: Option<String>,
  #[serde(rename = "rpc_address")]
  rpc_address: Option<String>
}

impl InlineResponse200Other {
  /// more information on versions
  pub fn new() -> InlineResponse200Other {
    InlineResponse200Other {
      tx_index: None,
      rpc_address: None
    }
  }

  pub fn set_tx_index(&mut self, tx_index: String) {
    self.tx_index = Some(tx_index);
  }

  pub fn with_tx_index(mut self, tx_index: String) -> InlineResponse200Other {
    self.tx_index = Some(tx_index);
    self
  }

  pub fn tx_index(&self) -> Option<&String> {
    self.tx_index.as_ref()
  }

  pub fn reset_tx_index(&mut self) {
    self.tx_index = None;
  }

  pub fn set_rpc_address(&mut self, rpc_address: String) {
    self.rpc_address = Some(rpc_address);
  }

  pub fn with_rpc_address(mut self, rpc_address: String) -> InlineResponse200Other {
    self.rpc_address = Some(rpc_address);
    self
  }

  pub fn rpc_address(&self) -> Option<&String> {
    self.rpc_address.as_ref()
  }

  pub fn reset_rpc_address(&mut self) {
    self.rpc_address = None;
  }

}



